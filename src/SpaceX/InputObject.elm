-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module SpaceX.InputObject exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import SpaceX.Enum.Order_by
import SpaceX.Enum.Users_constraint
import SpaceX.Enum.Users_update_column
import SpaceX.Interface
import SpaceX.Object
import SpaceX.Scalar
import SpaceX.ScalarCodecs
import SpaceX.Union


buildCapsulesFind :
    (CapsulesFindOptionalFields -> CapsulesFindOptionalFields)
    -> CapsulesFind
buildCapsulesFind fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { id = Absent, landings = Absent, mission = Absent, original_launch = Absent, reuse_count = Absent, status = Absent, type_ = Absent }
    in
    { id = optionals____.id, landings = optionals____.landings, mission = optionals____.mission, original_launch = optionals____.original_launch, reuse_count = optionals____.reuse_count, status = optionals____.status, type_ = optionals____.type_ }


type alias CapsulesFindOptionalFields =
    { id : OptionalArgument SpaceX.ScalarCodecs.Id
    , landings : OptionalArgument Int
    , mission : OptionalArgument String
    , original_launch : OptionalArgument SpaceX.ScalarCodecs.Date
    , reuse_count : OptionalArgument Int
    , status : OptionalArgument String
    , type_ : OptionalArgument String
    }


{-| Type for the CapsulesFind input object.
-}
type alias CapsulesFind =
    { id : OptionalArgument SpaceX.ScalarCodecs.Id
    , landings : OptionalArgument Int
    , mission : OptionalArgument String
    , original_launch : OptionalArgument SpaceX.ScalarCodecs.Date
    , reuse_count : OptionalArgument Int
    , status : OptionalArgument String
    , type_ : OptionalArgument String
    }


{-| Encode a CapsulesFind into a value that can be used as an argument.
-}
encodeCapsulesFind : CapsulesFind -> Value
encodeCapsulesFind input____ =
    Encode.maybeObject
        [ ( "id", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecId) |> Encode.optional input____.id ), ( "landings", Encode.int |> Encode.optional input____.landings ), ( "mission", Encode.string |> Encode.optional input____.mission ), ( "original_launch", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecDate) |> Encode.optional input____.original_launch ), ( "reuse_count", Encode.int |> Encode.optional input____.reuse_count ), ( "status", Encode.string |> Encode.optional input____.status ), ( "type", Encode.string |> Encode.optional input____.type_ ) ]


buildCoresFind :
    (CoresFindOptionalFields -> CoresFindOptionalFields)
    -> CoresFind
buildCoresFind fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { asds_attempts = Absent, asds_landings = Absent, block = Absent, id = Absent, missions = Absent, original_launch = Absent, reuse_count = Absent, rtls_attempts = Absent, rtls_landings = Absent, status = Absent, water_landing = Absent }
    in
    { asds_attempts = optionals____.asds_attempts, asds_landings = optionals____.asds_landings, block = optionals____.block, id = optionals____.id, missions = optionals____.missions, original_launch = optionals____.original_launch, reuse_count = optionals____.reuse_count, rtls_attempts = optionals____.rtls_attempts, rtls_landings = optionals____.rtls_landings, status = optionals____.status, water_landing = optionals____.water_landing }


type alias CoresFindOptionalFields =
    { asds_attempts : OptionalArgument Int
    , asds_landings : OptionalArgument Int
    , block : OptionalArgument Int
    , id : OptionalArgument String
    , missions : OptionalArgument String
    , original_launch : OptionalArgument SpaceX.ScalarCodecs.Date
    , reuse_count : OptionalArgument Int
    , rtls_attempts : OptionalArgument Int
    , rtls_landings : OptionalArgument Int
    , status : OptionalArgument String
    , water_landing : OptionalArgument Bool
    }


{-| Type for the CoresFind input object.
-}
type alias CoresFind =
    { asds_attempts : OptionalArgument Int
    , asds_landings : OptionalArgument Int
    , block : OptionalArgument Int
    , id : OptionalArgument String
    , missions : OptionalArgument String
    , original_launch : OptionalArgument SpaceX.ScalarCodecs.Date
    , reuse_count : OptionalArgument Int
    , rtls_attempts : OptionalArgument Int
    , rtls_landings : OptionalArgument Int
    , status : OptionalArgument String
    , water_landing : OptionalArgument Bool
    }


{-| Encode a CoresFind into a value that can be used as an argument.
-}
encodeCoresFind : CoresFind -> Value
encodeCoresFind input____ =
    Encode.maybeObject
        [ ( "asds_attempts", Encode.int |> Encode.optional input____.asds_attempts ), ( "asds_landings", Encode.int |> Encode.optional input____.asds_landings ), ( "block", Encode.int |> Encode.optional input____.block ), ( "id", Encode.string |> Encode.optional input____.id ), ( "missions", Encode.string |> Encode.optional input____.missions ), ( "original_launch", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecDate) |> Encode.optional input____.original_launch ), ( "reuse_count", Encode.int |> Encode.optional input____.reuse_count ), ( "rtls_attempts", Encode.int |> Encode.optional input____.rtls_attempts ), ( "rtls_landings", Encode.int |> Encode.optional input____.rtls_landings ), ( "status", Encode.string |> Encode.optional input____.status ), ( "water_landing", Encode.bool |> Encode.optional input____.water_landing ) ]


buildHistoryFind :
    (HistoryFindOptionalFields -> HistoryFindOptionalFields)
    -> HistoryFind
buildHistoryFind fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { end = Absent, flight_number = Absent, id = Absent, start = Absent }
    in
    { end = optionals____.end, flight_number = optionals____.flight_number, id = optionals____.id, start = optionals____.start }


type alias HistoryFindOptionalFields =
    { end : OptionalArgument SpaceX.ScalarCodecs.Date
    , flight_number : OptionalArgument Int
    , id : OptionalArgument SpaceX.ScalarCodecs.Id
    , start : OptionalArgument SpaceX.ScalarCodecs.Date
    }


{-| Type for the HistoryFind input object.
-}
type alias HistoryFind =
    { end : OptionalArgument SpaceX.ScalarCodecs.Date
    , flight_number : OptionalArgument Int
    , id : OptionalArgument SpaceX.ScalarCodecs.Id
    , start : OptionalArgument SpaceX.ScalarCodecs.Date
    }


{-| Encode a HistoryFind into a value that can be used as an argument.
-}
encodeHistoryFind : HistoryFind -> Value
encodeHistoryFind input____ =
    Encode.maybeObject
        [ ( "end", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecDate) |> Encode.optional input____.end ), ( "flight_number", Encode.int |> Encode.optional input____.flight_number ), ( "id", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecId) |> Encode.optional input____.id ), ( "start", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecDate) |> Encode.optional input____.start ) ]


buildLaunchFind :
    (LaunchFindOptionalFields -> LaunchFindOptionalFields)
    -> LaunchFind
buildLaunchFind fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { apoapsis_km = Absent, block = Absent, cap_serial = Absent, capsule_reuse = Absent, core_flight = Absent, core_reuse = Absent, core_serial = Absent, customer = Absent, eccentricity = Absent, end = Absent, epoch = Absent, fairings_recovered = Absent, fairings_recovery_attempt = Absent, fairings_reuse = Absent, fairings_reused = Absent, fairings_ship = Absent, gridfins = Absent, id = Absent, inclination_deg = Absent, land_success = Absent, landing_intent = Absent, landing_type = Absent, landing_vehicle = Absent, launch_date_local = Absent, launch_date_utc = Absent, launch_success = Absent, launch_year = Absent, legs = Absent, lifespan_years = Absent, longitude = Absent, manufacturer = Absent, mean_motion = Absent, mission_id = Absent, mission_name = Absent, nationality = Absent, norad_id = Absent, orbit = Absent, payload_id = Absent, payload_type = Absent, periapsis_km = Absent, period_min = Absent, raan = Absent, reference_system = Absent, regime = Absent, reused = Absent, rocket_id = Absent, rocket_name = Absent, rocket_type = Absent, second_stage_block = Absent, semi_major_axis_km = Absent, ship = Absent, side_core1_reuse = Absent, side_core2_reuse = Absent, site_id = Absent, site_name_long = Absent, site_name = Absent, start = Absent, tbd = Absent, tentative_max_precision = Absent, tentative = Absent }
    in
    { apoapsis_km = optionals____.apoapsis_km, block = optionals____.block, cap_serial = optionals____.cap_serial, capsule_reuse = optionals____.capsule_reuse, core_flight = optionals____.core_flight, core_reuse = optionals____.core_reuse, core_serial = optionals____.core_serial, customer = optionals____.customer, eccentricity = optionals____.eccentricity, end = optionals____.end, epoch = optionals____.epoch, fairings_recovered = optionals____.fairings_recovered, fairings_recovery_attempt = optionals____.fairings_recovery_attempt, fairings_reuse = optionals____.fairings_reuse, fairings_reused = optionals____.fairings_reused, fairings_ship = optionals____.fairings_ship, gridfins = optionals____.gridfins, id = optionals____.id, inclination_deg = optionals____.inclination_deg, land_success = optionals____.land_success, landing_intent = optionals____.landing_intent, landing_type = optionals____.landing_type, landing_vehicle = optionals____.landing_vehicle, launch_date_local = optionals____.launch_date_local, launch_date_utc = optionals____.launch_date_utc, launch_success = optionals____.launch_success, launch_year = optionals____.launch_year, legs = optionals____.legs, lifespan_years = optionals____.lifespan_years, longitude = optionals____.longitude, manufacturer = optionals____.manufacturer, mean_motion = optionals____.mean_motion, mission_id = optionals____.mission_id, mission_name = optionals____.mission_name, nationality = optionals____.nationality, norad_id = optionals____.norad_id, orbit = optionals____.orbit, payload_id = optionals____.payload_id, payload_type = optionals____.payload_type, periapsis_km = optionals____.periapsis_km, period_min = optionals____.period_min, raan = optionals____.raan, reference_system = optionals____.reference_system, regime = optionals____.regime, reused = optionals____.reused, rocket_id = optionals____.rocket_id, rocket_name = optionals____.rocket_name, rocket_type = optionals____.rocket_type, second_stage_block = optionals____.second_stage_block, semi_major_axis_km = optionals____.semi_major_axis_km, ship = optionals____.ship, side_core1_reuse = optionals____.side_core1_reuse, side_core2_reuse = optionals____.side_core2_reuse, site_id = optionals____.site_id, site_name_long = optionals____.site_name_long, site_name = optionals____.site_name, start = optionals____.start, tbd = optionals____.tbd, tentative_max_precision = optionals____.tentative_max_precision, tentative = optionals____.tentative }


type alias LaunchFindOptionalFields =
    { apoapsis_km : OptionalArgument Float
    , block : OptionalArgument Int
    , cap_serial : OptionalArgument String
    , capsule_reuse : OptionalArgument String
    , core_flight : OptionalArgument Int
    , core_reuse : OptionalArgument String
    , core_serial : OptionalArgument String
    , customer : OptionalArgument String
    , eccentricity : OptionalArgument Float
    , end : OptionalArgument SpaceX.ScalarCodecs.Date
    , epoch : OptionalArgument SpaceX.ScalarCodecs.Date
    , fairings_recovered : OptionalArgument String
    , fairings_recovery_attempt : OptionalArgument String
    , fairings_reuse : OptionalArgument String
    , fairings_reused : OptionalArgument String
    , fairings_ship : OptionalArgument String
    , gridfins : OptionalArgument String
    , id : OptionalArgument SpaceX.ScalarCodecs.Id
    , inclination_deg : OptionalArgument Float
    , land_success : OptionalArgument String
    , landing_intent : OptionalArgument String
    , landing_type : OptionalArgument String
    , landing_vehicle : OptionalArgument String
    , launch_date_local : OptionalArgument SpaceX.ScalarCodecs.Date
    , launch_date_utc : OptionalArgument SpaceX.ScalarCodecs.Date
    , launch_success : OptionalArgument String
    , launch_year : OptionalArgument String
    , legs : OptionalArgument String
    , lifespan_years : OptionalArgument Float
    , longitude : OptionalArgument Float
    , manufacturer : OptionalArgument String
    , mean_motion : OptionalArgument Float
    , mission_id : OptionalArgument String
    , mission_name : OptionalArgument String
    , nationality : OptionalArgument String
    , norad_id : OptionalArgument Int
    , orbit : OptionalArgument String
    , payload_id : OptionalArgument String
    , payload_type : OptionalArgument String
    , periapsis_km : OptionalArgument Float
    , period_min : OptionalArgument Float
    , raan : OptionalArgument Float
    , reference_system : OptionalArgument String
    , regime : OptionalArgument String
    , reused : OptionalArgument String
    , rocket_id : OptionalArgument String
    , rocket_name : OptionalArgument String
    , rocket_type : OptionalArgument String
    , second_stage_block : OptionalArgument String
    , semi_major_axis_km : OptionalArgument Float
    , ship : OptionalArgument String
    , side_core1_reuse : OptionalArgument String
    , side_core2_reuse : OptionalArgument String
    , site_id : OptionalArgument String
    , site_name_long : OptionalArgument String
    , site_name : OptionalArgument String
    , start : OptionalArgument SpaceX.ScalarCodecs.Date
    , tbd : OptionalArgument String
    , tentative_max_precision : OptionalArgument String
    , tentative : OptionalArgument String
    }


{-| Type for the LaunchFind input object.
-}
type alias LaunchFind =
    { apoapsis_km : OptionalArgument Float
    , block : OptionalArgument Int
    , cap_serial : OptionalArgument String
    , capsule_reuse : OptionalArgument String
    , core_flight : OptionalArgument Int
    , core_reuse : OptionalArgument String
    , core_serial : OptionalArgument String
    , customer : OptionalArgument String
    , eccentricity : OptionalArgument Float
    , end : OptionalArgument SpaceX.ScalarCodecs.Date
    , epoch : OptionalArgument SpaceX.ScalarCodecs.Date
    , fairings_recovered : OptionalArgument String
    , fairings_recovery_attempt : OptionalArgument String
    , fairings_reuse : OptionalArgument String
    , fairings_reused : OptionalArgument String
    , fairings_ship : OptionalArgument String
    , gridfins : OptionalArgument String
    , id : OptionalArgument SpaceX.ScalarCodecs.Id
    , inclination_deg : OptionalArgument Float
    , land_success : OptionalArgument String
    , landing_intent : OptionalArgument String
    , landing_type : OptionalArgument String
    , landing_vehicle : OptionalArgument String
    , launch_date_local : OptionalArgument SpaceX.ScalarCodecs.Date
    , launch_date_utc : OptionalArgument SpaceX.ScalarCodecs.Date
    , launch_success : OptionalArgument String
    , launch_year : OptionalArgument String
    , legs : OptionalArgument String
    , lifespan_years : OptionalArgument Float
    , longitude : OptionalArgument Float
    , manufacturer : OptionalArgument String
    , mean_motion : OptionalArgument Float
    , mission_id : OptionalArgument String
    , mission_name : OptionalArgument String
    , nationality : OptionalArgument String
    , norad_id : OptionalArgument Int
    , orbit : OptionalArgument String
    , payload_id : OptionalArgument String
    , payload_type : OptionalArgument String
    , periapsis_km : OptionalArgument Float
    , period_min : OptionalArgument Float
    , raan : OptionalArgument Float
    , reference_system : OptionalArgument String
    , regime : OptionalArgument String
    , reused : OptionalArgument String
    , rocket_id : OptionalArgument String
    , rocket_name : OptionalArgument String
    , rocket_type : OptionalArgument String
    , second_stage_block : OptionalArgument String
    , semi_major_axis_km : OptionalArgument Float
    , ship : OptionalArgument String
    , side_core1_reuse : OptionalArgument String
    , side_core2_reuse : OptionalArgument String
    , site_id : OptionalArgument String
    , site_name_long : OptionalArgument String
    , site_name : OptionalArgument String
    , start : OptionalArgument SpaceX.ScalarCodecs.Date
    , tbd : OptionalArgument String
    , tentative_max_precision : OptionalArgument String
    , tentative : OptionalArgument String
    }


{-| Encode a LaunchFind into a value that can be used as an argument.
-}
encodeLaunchFind : LaunchFind -> Value
encodeLaunchFind input____ =
    Encode.maybeObject
        [ ( "apoapsis_km", Encode.float |> Encode.optional input____.apoapsis_km ), ( "block", Encode.int |> Encode.optional input____.block ), ( "cap_serial", Encode.string |> Encode.optional input____.cap_serial ), ( "capsule_reuse", Encode.string |> Encode.optional input____.capsule_reuse ), ( "core_flight", Encode.int |> Encode.optional input____.core_flight ), ( "core_reuse", Encode.string |> Encode.optional input____.core_reuse ), ( "core_serial", Encode.string |> Encode.optional input____.core_serial ), ( "customer", Encode.string |> Encode.optional input____.customer ), ( "eccentricity", Encode.float |> Encode.optional input____.eccentricity ), ( "end", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecDate) |> Encode.optional input____.end ), ( "epoch", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecDate) |> Encode.optional input____.epoch ), ( "fairings_recovered", Encode.string |> Encode.optional input____.fairings_recovered ), ( "fairings_recovery_attempt", Encode.string |> Encode.optional input____.fairings_recovery_attempt ), ( "fairings_reuse", Encode.string |> Encode.optional input____.fairings_reuse ), ( "fairings_reused", Encode.string |> Encode.optional input____.fairings_reused ), ( "fairings_ship", Encode.string |> Encode.optional input____.fairings_ship ), ( "gridfins", Encode.string |> Encode.optional input____.gridfins ), ( "id", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecId) |> Encode.optional input____.id ), ( "inclination_deg", Encode.float |> Encode.optional input____.inclination_deg ), ( "land_success", Encode.string |> Encode.optional input____.land_success ), ( "landing_intent", Encode.string |> Encode.optional input____.landing_intent ), ( "landing_type", Encode.string |> Encode.optional input____.landing_type ), ( "landing_vehicle", Encode.string |> Encode.optional input____.landing_vehicle ), ( "launch_date_local", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecDate) |> Encode.optional input____.launch_date_local ), ( "launch_date_utc", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecDate) |> Encode.optional input____.launch_date_utc ), ( "launch_success", Encode.string |> Encode.optional input____.launch_success ), ( "launch_year", Encode.string |> Encode.optional input____.launch_year ), ( "legs", Encode.string |> Encode.optional input____.legs ), ( "lifespan_years", Encode.float |> Encode.optional input____.lifespan_years ), ( "longitude", Encode.float |> Encode.optional input____.longitude ), ( "manufacturer", Encode.string |> Encode.optional input____.manufacturer ), ( "mean_motion", Encode.float |> Encode.optional input____.mean_motion ), ( "mission_id", Encode.string |> Encode.optional input____.mission_id ), ( "mission_name", Encode.string |> Encode.optional input____.mission_name ), ( "nationality", Encode.string |> Encode.optional input____.nationality ), ( "norad_id", Encode.int |> Encode.optional input____.norad_id ), ( "orbit", Encode.string |> Encode.optional input____.orbit ), ( "payload_id", Encode.string |> Encode.optional input____.payload_id ), ( "payload_type", Encode.string |> Encode.optional input____.payload_type ), ( "periapsis_km", Encode.float |> Encode.optional input____.periapsis_km ), ( "period_min", Encode.float |> Encode.optional input____.period_min ), ( "raan", Encode.float |> Encode.optional input____.raan ), ( "reference_system", Encode.string |> Encode.optional input____.reference_system ), ( "regime", Encode.string |> Encode.optional input____.regime ), ( "reused", Encode.string |> Encode.optional input____.reused ), ( "rocket_id", Encode.string |> Encode.optional input____.rocket_id ), ( "rocket_name", Encode.string |> Encode.optional input____.rocket_name ), ( "rocket_type", Encode.string |> Encode.optional input____.rocket_type ), ( "second_stage_block", Encode.string |> Encode.optional input____.second_stage_block ), ( "semi_major_axis_km", Encode.float |> Encode.optional input____.semi_major_axis_km ), ( "ship", Encode.string |> Encode.optional input____.ship ), ( "side_core1_reuse", Encode.string |> Encode.optional input____.side_core1_reuse ), ( "side_core2_reuse", Encode.string |> Encode.optional input____.side_core2_reuse ), ( "site_id", Encode.string |> Encode.optional input____.site_id ), ( "site_name_long", Encode.string |> Encode.optional input____.site_name_long ), ( "site_name", Encode.string |> Encode.optional input____.site_name ), ( "start", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecDate) |> Encode.optional input____.start ), ( "tbd", Encode.string |> Encode.optional input____.tbd ), ( "tentative_max_precision", Encode.string |> Encode.optional input____.tentative_max_precision ), ( "tentative", Encode.string |> Encode.optional input____.tentative ) ]


buildMissionsFind :
    (MissionsFindOptionalFields -> MissionsFindOptionalFields)
    -> MissionsFind
buildMissionsFind fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { id = Absent, manufacturer = Absent, name = Absent, payload_id = Absent }
    in
    { id = optionals____.id, manufacturer = optionals____.manufacturer, name = optionals____.name, payload_id = optionals____.payload_id }


type alias MissionsFindOptionalFields =
    { id : OptionalArgument SpaceX.ScalarCodecs.Id
    , manufacturer : OptionalArgument String
    , name : OptionalArgument String
    , payload_id : OptionalArgument String
    }


{-| Type for the MissionsFind input object.
-}
type alias MissionsFind =
    { id : OptionalArgument SpaceX.ScalarCodecs.Id
    , manufacturer : OptionalArgument String
    , name : OptionalArgument String
    , payload_id : OptionalArgument String
    }


{-| Encode a MissionsFind into a value that can be used as an argument.
-}
encodeMissionsFind : MissionsFind -> Value
encodeMissionsFind input____ =
    Encode.maybeObject
        [ ( "id", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecId) |> Encode.optional input____.id ), ( "manufacturer", Encode.string |> Encode.optional input____.manufacturer ), ( "name", Encode.string |> Encode.optional input____.name ), ( "payload_id", Encode.string |> Encode.optional input____.payload_id ) ]


buildPayloadsFind :
    (PayloadsFindOptionalFields -> PayloadsFindOptionalFields)
    -> PayloadsFind
buildPayloadsFind fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { apoapsis_km = Absent, customer = Absent, eccentricity = Absent, epoch = Absent, inclination_deg = Absent, lifespan_years = Absent, longitude = Absent, manufacturer = Absent, mean_motion = Absent, nationality = Absent, norad_id = Absent, orbit = Absent, payload_id = Absent, payload_type = Absent, periapsis_km = Absent, period_min = Absent, raan = Absent, reference_system = Absent, regime = Absent, reused = Absent, semi_major_axis_km = Absent }
    in
    { apoapsis_km = optionals____.apoapsis_km, customer = optionals____.customer, eccentricity = optionals____.eccentricity, epoch = optionals____.epoch, inclination_deg = optionals____.inclination_deg, lifespan_years = optionals____.lifespan_years, longitude = optionals____.longitude, manufacturer = optionals____.manufacturer, mean_motion = optionals____.mean_motion, nationality = optionals____.nationality, norad_id = optionals____.norad_id, orbit = optionals____.orbit, payload_id = optionals____.payload_id, payload_type = optionals____.payload_type, periapsis_km = optionals____.periapsis_km, period_min = optionals____.period_min, raan = optionals____.raan, reference_system = optionals____.reference_system, regime = optionals____.regime, reused = optionals____.reused, semi_major_axis_km = optionals____.semi_major_axis_km }


type alias PayloadsFindOptionalFields =
    { apoapsis_km : OptionalArgument Float
    , customer : OptionalArgument String
    , eccentricity : OptionalArgument Float
    , epoch : OptionalArgument SpaceX.ScalarCodecs.Date
    , inclination_deg : OptionalArgument Float
    , lifespan_years : OptionalArgument Float
    , longitude : OptionalArgument Float
    , manufacturer : OptionalArgument String
    , mean_motion : OptionalArgument Float
    , nationality : OptionalArgument String
    , norad_id : OptionalArgument Int
    , orbit : OptionalArgument String
    , payload_id : OptionalArgument SpaceX.ScalarCodecs.Id
    , payload_type : OptionalArgument String
    , periapsis_km : OptionalArgument Float
    , period_min : OptionalArgument Float
    , raan : OptionalArgument Float
    , reference_system : OptionalArgument String
    , regime : OptionalArgument String
    , reused : OptionalArgument Bool
    , semi_major_axis_km : OptionalArgument Float
    }


{-| Type for the PayloadsFind input object.
-}
type alias PayloadsFind =
    { apoapsis_km : OptionalArgument Float
    , customer : OptionalArgument String
    , eccentricity : OptionalArgument Float
    , epoch : OptionalArgument SpaceX.ScalarCodecs.Date
    , inclination_deg : OptionalArgument Float
    , lifespan_years : OptionalArgument Float
    , longitude : OptionalArgument Float
    , manufacturer : OptionalArgument String
    , mean_motion : OptionalArgument Float
    , nationality : OptionalArgument String
    , norad_id : OptionalArgument Int
    , orbit : OptionalArgument String
    , payload_id : OptionalArgument SpaceX.ScalarCodecs.Id
    , payload_type : OptionalArgument String
    , periapsis_km : OptionalArgument Float
    , period_min : OptionalArgument Float
    , raan : OptionalArgument Float
    , reference_system : OptionalArgument String
    , regime : OptionalArgument String
    , reused : OptionalArgument Bool
    , semi_major_axis_km : OptionalArgument Float
    }


{-| Encode a PayloadsFind into a value that can be used as an argument.
-}
encodePayloadsFind : PayloadsFind -> Value
encodePayloadsFind input____ =
    Encode.maybeObject
        [ ( "apoapsis_km", Encode.float |> Encode.optional input____.apoapsis_km ), ( "customer", Encode.string |> Encode.optional input____.customer ), ( "eccentricity", Encode.float |> Encode.optional input____.eccentricity ), ( "epoch", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecDate) |> Encode.optional input____.epoch ), ( "inclination_deg", Encode.float |> Encode.optional input____.inclination_deg ), ( "lifespan_years", Encode.float |> Encode.optional input____.lifespan_years ), ( "longitude", Encode.float |> Encode.optional input____.longitude ), ( "manufacturer", Encode.string |> Encode.optional input____.manufacturer ), ( "mean_motion", Encode.float |> Encode.optional input____.mean_motion ), ( "nationality", Encode.string |> Encode.optional input____.nationality ), ( "norad_id", Encode.int |> Encode.optional input____.norad_id ), ( "orbit", Encode.string |> Encode.optional input____.orbit ), ( "payload_id", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecId) |> Encode.optional input____.payload_id ), ( "payload_type", Encode.string |> Encode.optional input____.payload_type ), ( "periapsis_km", Encode.float |> Encode.optional input____.periapsis_km ), ( "period_min", Encode.float |> Encode.optional input____.period_min ), ( "raan", Encode.float |> Encode.optional input____.raan ), ( "reference_system", Encode.string |> Encode.optional input____.reference_system ), ( "regime", Encode.string |> Encode.optional input____.regime ), ( "reused", Encode.bool |> Encode.optional input____.reused ), ( "semi_major_axis_km", Encode.float |> Encode.optional input____.semi_major_axis_km ) ]


buildShipsFind :
    (ShipsFindOptionalFields -> ShipsFindOptionalFields)
    -> ShipsFind
buildShipsFind fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { id = Absent, name = Absent, model = Absent, type_ = Absent, role = Absent, active = Absent, imo = Absent, mmsi = Absent, abs = Absent, class = Absent, weight_lbs = Absent, weight_kg = Absent, year_built = Absent, home_port = Absent, status = Absent, speed_kn = Absent, course_deg = Absent, latitude = Absent, longitude = Absent, successful_landings = Absent, attempted_landings = Absent, mission = Absent }
    in
    { id = optionals____.id, name = optionals____.name, model = optionals____.model, type_ = optionals____.type_, role = optionals____.role, active = optionals____.active, imo = optionals____.imo, mmsi = optionals____.mmsi, abs = optionals____.abs, class = optionals____.class, weight_lbs = optionals____.weight_lbs, weight_kg = optionals____.weight_kg, year_built = optionals____.year_built, home_port = optionals____.home_port, status = optionals____.status, speed_kn = optionals____.speed_kn, course_deg = optionals____.course_deg, latitude = optionals____.latitude, longitude = optionals____.longitude, successful_landings = optionals____.successful_landings, attempted_landings = optionals____.attempted_landings, mission = optionals____.mission }


type alias ShipsFindOptionalFields =
    { id : OptionalArgument SpaceX.ScalarCodecs.Id
    , name : OptionalArgument String
    , model : OptionalArgument String
    , type_ : OptionalArgument String
    , role : OptionalArgument String
    , active : OptionalArgument Bool
    , imo : OptionalArgument Int
    , mmsi : OptionalArgument Int
    , abs : OptionalArgument Int
    , class : OptionalArgument Int
    , weight_lbs : OptionalArgument Int
    , weight_kg : OptionalArgument Int
    , year_built : OptionalArgument Int
    , home_port : OptionalArgument String
    , status : OptionalArgument String
    , speed_kn : OptionalArgument Int
    , course_deg : OptionalArgument Int
    , latitude : OptionalArgument Float
    , longitude : OptionalArgument Float
    , successful_landings : OptionalArgument Int
    , attempted_landings : OptionalArgument Int
    , mission : OptionalArgument String
    }


{-| Type for the ShipsFind input object.
-}
type alias ShipsFind =
    { id : OptionalArgument SpaceX.ScalarCodecs.Id
    , name : OptionalArgument String
    , model : OptionalArgument String
    , type_ : OptionalArgument String
    , role : OptionalArgument String
    , active : OptionalArgument Bool
    , imo : OptionalArgument Int
    , mmsi : OptionalArgument Int
    , abs : OptionalArgument Int
    , class : OptionalArgument Int
    , weight_lbs : OptionalArgument Int
    , weight_kg : OptionalArgument Int
    , year_built : OptionalArgument Int
    , home_port : OptionalArgument String
    , status : OptionalArgument String
    , speed_kn : OptionalArgument Int
    , course_deg : OptionalArgument Int
    , latitude : OptionalArgument Float
    , longitude : OptionalArgument Float
    , successful_landings : OptionalArgument Int
    , attempted_landings : OptionalArgument Int
    , mission : OptionalArgument String
    }


{-| Encode a ShipsFind into a value that can be used as an argument.
-}
encodeShipsFind : ShipsFind -> Value
encodeShipsFind input____ =
    Encode.maybeObject
        [ ( "id", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecId) |> Encode.optional input____.id ), ( "name", Encode.string |> Encode.optional input____.name ), ( "model", Encode.string |> Encode.optional input____.model ), ( "type", Encode.string |> Encode.optional input____.type_ ), ( "role", Encode.string |> Encode.optional input____.role ), ( "active", Encode.bool |> Encode.optional input____.active ), ( "imo", Encode.int |> Encode.optional input____.imo ), ( "mmsi", Encode.int |> Encode.optional input____.mmsi ), ( "abs", Encode.int |> Encode.optional input____.abs ), ( "class", Encode.int |> Encode.optional input____.class ), ( "weight_lbs", Encode.int |> Encode.optional input____.weight_lbs ), ( "weight_kg", Encode.int |> Encode.optional input____.weight_kg ), ( "year_built", Encode.int |> Encode.optional input____.year_built ), ( "home_port", Encode.string |> Encode.optional input____.home_port ), ( "status", Encode.string |> Encode.optional input____.status ), ( "speed_kn", Encode.int |> Encode.optional input____.speed_kn ), ( "course_deg", Encode.int |> Encode.optional input____.course_deg ), ( "latitude", Encode.float |> Encode.optional input____.latitude ), ( "longitude", Encode.float |> Encode.optional input____.longitude ), ( "successful_landings", Encode.int |> Encode.optional input____.successful_landings ), ( "attempted_landings", Encode.int |> Encode.optional input____.attempted_landings ), ( "mission", Encode.string |> Encode.optional input____.mission ) ]


buildString_comparison_exp :
    (String_comparison_expOptionalFields -> String_comparison_expOptionalFields)
    -> String_comparison_exp
buildString_comparison_exp fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { eq_ = Absent, gt_ = Absent, gte_ = Absent, ilike_ = Absent, in_ = Absent, is_null_ = Absent, like_ = Absent, lt_ = Absent, lte_ = Absent, neq_ = Absent, nilike_ = Absent, nin_ = Absent, nlike_ = Absent, nsimilar_ = Absent, similar_ = Absent }
    in
    { eq_ = optionals____.eq_, gt_ = optionals____.gt_, gte_ = optionals____.gte_, ilike_ = optionals____.ilike_, in_ = optionals____.in_, is_null_ = optionals____.is_null_, like_ = optionals____.like_, lt_ = optionals____.lt_, lte_ = optionals____.lte_, neq_ = optionals____.neq_, nilike_ = optionals____.nilike_, nin_ = optionals____.nin_, nlike_ = optionals____.nlike_, nsimilar_ = optionals____.nsimilar_, similar_ = optionals____.similar_ }


type alias String_comparison_expOptionalFields =
    { eq_ : OptionalArgument String
    , gt_ : OptionalArgument String
    , gte_ : OptionalArgument String
    , ilike_ : OptionalArgument String
    , in_ : OptionalArgument (List String)
    , is_null_ : OptionalArgument Bool
    , like_ : OptionalArgument String
    , lt_ : OptionalArgument String
    , lte_ : OptionalArgument String
    , neq_ : OptionalArgument String
    , nilike_ : OptionalArgument String
    , nin_ : OptionalArgument (List String)
    , nlike_ : OptionalArgument String
    , nsimilar_ : OptionalArgument String
    , similar_ : OptionalArgument String
    }


{-| Type for the String\_comparison\_exp input object.
-}
type alias String_comparison_exp =
    { eq_ : OptionalArgument String
    , gt_ : OptionalArgument String
    , gte_ : OptionalArgument String
    , ilike_ : OptionalArgument String
    , in_ : OptionalArgument (List String)
    , is_null_ : OptionalArgument Bool
    , like_ : OptionalArgument String
    , lt_ : OptionalArgument String
    , lte_ : OptionalArgument String
    , neq_ : OptionalArgument String
    , nilike_ : OptionalArgument String
    , nin_ : OptionalArgument (List String)
    , nlike_ : OptionalArgument String
    , nsimilar_ : OptionalArgument String
    , similar_ : OptionalArgument String
    }


{-| Encode a String\_comparison\_exp into a value that can be used as an argument.
-}
encodeString_comparison_exp : String_comparison_exp -> Value
encodeString_comparison_exp input____ =
    Encode.maybeObject
        [ ( "_eq", Encode.string |> Encode.optional input____.eq_ ), ( "_gt", Encode.string |> Encode.optional input____.gt_ ), ( "_gte", Encode.string |> Encode.optional input____.gte_ ), ( "_ilike", Encode.string |> Encode.optional input____.ilike_ ), ( "_in", (Encode.string |> Encode.list) |> Encode.optional input____.in_ ), ( "_is_null", Encode.bool |> Encode.optional input____.is_null_ ), ( "_like", Encode.string |> Encode.optional input____.like_ ), ( "_lt", Encode.string |> Encode.optional input____.lt_ ), ( "_lte", Encode.string |> Encode.optional input____.lte_ ), ( "_neq", Encode.string |> Encode.optional input____.neq_ ), ( "_nilike", Encode.string |> Encode.optional input____.nilike_ ), ( "_nin", (Encode.string |> Encode.list) |> Encode.optional input____.nin_ ), ( "_nlike", Encode.string |> Encode.optional input____.nlike_ ), ( "_nsimilar", Encode.string |> Encode.optional input____.nsimilar_ ), ( "_similar", Encode.string |> Encode.optional input____.similar_ ) ]


buildTimestamptz_comparison_exp :
    (Timestamptz_comparison_expOptionalFields -> Timestamptz_comparison_expOptionalFields)
    -> Timestamptz_comparison_exp
buildTimestamptz_comparison_exp fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { eq_ = Absent, gt_ = Absent, gte_ = Absent, in_ = Absent, is_null_ = Absent, lt_ = Absent, lte_ = Absent, neq_ = Absent, nin_ = Absent }
    in
    { eq_ = optionals____.eq_, gt_ = optionals____.gt_, gte_ = optionals____.gte_, in_ = optionals____.in_, is_null_ = optionals____.is_null_, lt_ = optionals____.lt_, lte_ = optionals____.lte_, neq_ = optionals____.neq_, nin_ = optionals____.nin_ }


type alias Timestamptz_comparison_expOptionalFields =
    { eq_ : OptionalArgument SpaceX.ScalarCodecs.Timestamptz
    , gt_ : OptionalArgument SpaceX.ScalarCodecs.Timestamptz
    , gte_ : OptionalArgument SpaceX.ScalarCodecs.Timestamptz
    , in_ : OptionalArgument (List SpaceX.ScalarCodecs.Timestamptz)
    , is_null_ : OptionalArgument Bool
    , lt_ : OptionalArgument SpaceX.ScalarCodecs.Timestamptz
    , lte_ : OptionalArgument SpaceX.ScalarCodecs.Timestamptz
    , neq_ : OptionalArgument SpaceX.ScalarCodecs.Timestamptz
    , nin_ : OptionalArgument (List SpaceX.ScalarCodecs.Timestamptz)
    }


{-| Type for the Timestamptz\_comparison\_exp input object.
-}
type alias Timestamptz_comparison_exp =
    { eq_ : OptionalArgument SpaceX.ScalarCodecs.Timestamptz
    , gt_ : OptionalArgument SpaceX.ScalarCodecs.Timestamptz
    , gte_ : OptionalArgument SpaceX.ScalarCodecs.Timestamptz
    , in_ : OptionalArgument (List SpaceX.ScalarCodecs.Timestamptz)
    , is_null_ : OptionalArgument Bool
    , lt_ : OptionalArgument SpaceX.ScalarCodecs.Timestamptz
    , lte_ : OptionalArgument SpaceX.ScalarCodecs.Timestamptz
    , neq_ : OptionalArgument SpaceX.ScalarCodecs.Timestamptz
    , nin_ : OptionalArgument (List SpaceX.ScalarCodecs.Timestamptz)
    }


{-| Encode a Timestamptz\_comparison\_exp into a value that can be used as an argument.
-}
encodeTimestamptz_comparison_exp : Timestamptz_comparison_exp -> Value
encodeTimestamptz_comparison_exp input____ =
    Encode.maybeObject
        [ ( "_eq", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecTimestamptz) |> Encode.optional input____.eq_ ), ( "_gt", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecTimestamptz) |> Encode.optional input____.gt_ ), ( "_gte", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecTimestamptz) |> Encode.optional input____.gte_ ), ( "_in", ((SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecTimestamptz) |> Encode.list) |> Encode.optional input____.in_ ), ( "_is_null", Encode.bool |> Encode.optional input____.is_null_ ), ( "_lt", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecTimestamptz) |> Encode.optional input____.lt_ ), ( "_lte", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecTimestamptz) |> Encode.optional input____.lte_ ), ( "_neq", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecTimestamptz) |> Encode.optional input____.neq_ ), ( "_nin", ((SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecTimestamptz) |> Encode.list) |> Encode.optional input____.nin_ ) ]


buildUsers_aggregate_order_by :
    (Users_aggregate_order_byOptionalFields -> Users_aggregate_order_byOptionalFields)
    -> Users_aggregate_order_by
buildUsers_aggregate_order_by fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { count = Absent, max = Absent, min = Absent }
    in
    { count = optionals____.count, max = optionals____.max, min = optionals____.min }


type alias Users_aggregate_order_byOptionalFields =
    { count : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , max : OptionalArgument Users_max_order_by
    , min : OptionalArgument Users_min_order_by
    }


{-| Type for the Users\_aggregate\_order\_by input object.
-}
type alias Users_aggregate_order_by =
    { count : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , max : OptionalArgument Users_max_order_by
    , min : OptionalArgument Users_min_order_by
    }


{-| Encode a Users\_aggregate\_order\_by into a value that can be used as an argument.
-}
encodeUsers_aggregate_order_by : Users_aggregate_order_by -> Value
encodeUsers_aggregate_order_by input____ =
    Encode.maybeObject
        [ ( "count", Encode.enum SpaceX.Enum.Order_by.toString |> Encode.optional input____.count ), ( "max", encodeUsers_max_order_by |> Encode.optional input____.max ), ( "min", encodeUsers_min_order_by |> Encode.optional input____.min ) ]


buildUsers_arr_rel_insert_input :
    Users_arr_rel_insert_inputRequiredFields
    -> (Users_arr_rel_insert_inputOptionalFields -> Users_arr_rel_insert_inputOptionalFields)
    -> Users_arr_rel_insert_input
buildUsers_arr_rel_insert_input required____ fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { on_conflict = Absent }
    in
    { data = required____.data, on_conflict = optionals____.on_conflict }


type alias Users_arr_rel_insert_inputRequiredFields =
    { data : List Users_insert_input }


type alias Users_arr_rel_insert_inputOptionalFields =
    { on_conflict : OptionalArgument Users_on_conflict }


{-| Type for the Users\_arr\_rel\_insert\_input input object.
-}
type alias Users_arr_rel_insert_input =
    { data : List Users_insert_input
    , on_conflict : OptionalArgument Users_on_conflict
    }


{-| Encode a Users\_arr\_rel\_insert\_input into a value that can be used as an argument.
-}
encodeUsers_arr_rel_insert_input : Users_arr_rel_insert_input -> Value
encodeUsers_arr_rel_insert_input input____ =
    Encode.maybeObject
        [ ( "data", (encodeUsers_insert_input |> Encode.list) input____.data |> Just ), ( "on_conflict", encodeUsers_on_conflict |> Encode.optional input____.on_conflict ) ]


buildUsers_bool_exp :
    (Users_bool_expOptionalFields -> Users_bool_expOptionalFields)
    -> Users_bool_exp
buildUsers_bool_exp fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { and_ = Absent, not_ = Absent, or_ = Absent, id = Absent, name = Absent, rocket = Absent, timestamp = Absent, twitter = Absent }
    in
    Users_bool_exp { and_ = optionals____.and_, not_ = optionals____.not_, or_ = optionals____.or_, id = optionals____.id, name = optionals____.name, rocket = optionals____.rocket, timestamp = optionals____.timestamp, twitter = optionals____.twitter }


type alias Users_bool_expOptionalFields =
    { and_ : OptionalArgument (List (Maybe Users_bool_exp))
    , not_ : OptionalArgument Users_bool_exp
    , or_ : OptionalArgument (List (Maybe Users_bool_exp))
    , id : OptionalArgument Uuid_comparison_exp
    , name : OptionalArgument String_comparison_exp
    , rocket : OptionalArgument String_comparison_exp
    , timestamp : OptionalArgument Timestamptz_comparison_exp
    , twitter : OptionalArgument String_comparison_exp
    }


{-| Type alias for the `Users_bool_exp` attributes. Note that this type
needs to use the `Users_bool_exp` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias Users_bool_expRaw =
    { and_ : OptionalArgument (List (Maybe Users_bool_exp))
    , not_ : OptionalArgument Users_bool_exp
    , or_ : OptionalArgument (List (Maybe Users_bool_exp))
    , id : OptionalArgument Uuid_comparison_exp
    , name : OptionalArgument String_comparison_exp
    , rocket : OptionalArgument String_comparison_exp
    , timestamp : OptionalArgument Timestamptz_comparison_exp
    , twitter : OptionalArgument String_comparison_exp
    }


{-| Type for the Users\_bool\_exp input object.
-}
type Users_bool_exp
    = Users_bool_exp Users_bool_expRaw


{-| Encode a Users\_bool\_exp into a value that can be used as an argument.
-}
encodeUsers_bool_exp : Users_bool_exp -> Value
encodeUsers_bool_exp (Users_bool_exp input____) =
    Encode.maybeObject
        [ ( "_and", (encodeUsers_bool_exp |> Encode.maybe |> Encode.list) |> Encode.optional input____.and_ ), ( "_not", encodeUsers_bool_exp |> Encode.optional input____.not_ ), ( "_or", (encodeUsers_bool_exp |> Encode.maybe |> Encode.list) |> Encode.optional input____.or_ ), ( "id", encodeUuid_comparison_exp |> Encode.optional input____.id ), ( "name", encodeString_comparison_exp |> Encode.optional input____.name ), ( "rocket", encodeString_comparison_exp |> Encode.optional input____.rocket ), ( "timestamp", encodeTimestamptz_comparison_exp |> Encode.optional input____.timestamp ), ( "twitter", encodeString_comparison_exp |> Encode.optional input____.twitter ) ]


buildUsers_insert_input :
    (Users_insert_inputOptionalFields -> Users_insert_inputOptionalFields)
    -> Users_insert_input
buildUsers_insert_input fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { id = Absent, name = Absent, rocket = Absent, timestamp = Absent, twitter = Absent }
    in
    { id = optionals____.id, name = optionals____.name, rocket = optionals____.rocket, timestamp = optionals____.timestamp, twitter = optionals____.twitter }


type alias Users_insert_inputOptionalFields =
    { id : OptionalArgument SpaceX.ScalarCodecs.Uuid
    , name : OptionalArgument String
    , rocket : OptionalArgument String
    , timestamp : OptionalArgument SpaceX.ScalarCodecs.Timestamptz
    , twitter : OptionalArgument String
    }


{-| Type for the Users\_insert\_input input object.
-}
type alias Users_insert_input =
    { id : OptionalArgument SpaceX.ScalarCodecs.Uuid
    , name : OptionalArgument String
    , rocket : OptionalArgument String
    , timestamp : OptionalArgument SpaceX.ScalarCodecs.Timestamptz
    , twitter : OptionalArgument String
    }


{-| Encode a Users\_insert\_input into a value that can be used as an argument.
-}
encodeUsers_insert_input : Users_insert_input -> Value
encodeUsers_insert_input input____ =
    Encode.maybeObject
        [ ( "id", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecUuid) |> Encode.optional input____.id ), ( "name", Encode.string |> Encode.optional input____.name ), ( "rocket", Encode.string |> Encode.optional input____.rocket ), ( "timestamp", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecTimestamptz) |> Encode.optional input____.timestamp ), ( "twitter", Encode.string |> Encode.optional input____.twitter ) ]


buildUsers_max_order_by :
    (Users_max_order_byOptionalFields -> Users_max_order_byOptionalFields)
    -> Users_max_order_by
buildUsers_max_order_by fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { name = Absent, rocket = Absent, timestamp = Absent, twitter = Absent }
    in
    { name = optionals____.name, rocket = optionals____.rocket, timestamp = optionals____.timestamp, twitter = optionals____.twitter }


type alias Users_max_order_byOptionalFields =
    { name : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , rocket : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , timestamp : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , twitter : OptionalArgument SpaceX.Enum.Order_by.Order_by
    }


{-| Type for the Users\_max\_order\_by input object.
-}
type alias Users_max_order_by =
    { name : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , rocket : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , timestamp : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , twitter : OptionalArgument SpaceX.Enum.Order_by.Order_by
    }


{-| Encode a Users\_max\_order\_by into a value that can be used as an argument.
-}
encodeUsers_max_order_by : Users_max_order_by -> Value
encodeUsers_max_order_by input____ =
    Encode.maybeObject
        [ ( "name", Encode.enum SpaceX.Enum.Order_by.toString |> Encode.optional input____.name ), ( "rocket", Encode.enum SpaceX.Enum.Order_by.toString |> Encode.optional input____.rocket ), ( "timestamp", Encode.enum SpaceX.Enum.Order_by.toString |> Encode.optional input____.timestamp ), ( "twitter", Encode.enum SpaceX.Enum.Order_by.toString |> Encode.optional input____.twitter ) ]


buildUsers_min_order_by :
    (Users_min_order_byOptionalFields -> Users_min_order_byOptionalFields)
    -> Users_min_order_by
buildUsers_min_order_by fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { name = Absent, rocket = Absent, timestamp = Absent, twitter = Absent }
    in
    { name = optionals____.name, rocket = optionals____.rocket, timestamp = optionals____.timestamp, twitter = optionals____.twitter }


type alias Users_min_order_byOptionalFields =
    { name : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , rocket : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , timestamp : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , twitter : OptionalArgument SpaceX.Enum.Order_by.Order_by
    }


{-| Type for the Users\_min\_order\_by input object.
-}
type alias Users_min_order_by =
    { name : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , rocket : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , timestamp : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , twitter : OptionalArgument SpaceX.Enum.Order_by.Order_by
    }


{-| Encode a Users\_min\_order\_by into a value that can be used as an argument.
-}
encodeUsers_min_order_by : Users_min_order_by -> Value
encodeUsers_min_order_by input____ =
    Encode.maybeObject
        [ ( "name", Encode.enum SpaceX.Enum.Order_by.toString |> Encode.optional input____.name ), ( "rocket", Encode.enum SpaceX.Enum.Order_by.toString |> Encode.optional input____.rocket ), ( "timestamp", Encode.enum SpaceX.Enum.Order_by.toString |> Encode.optional input____.timestamp ), ( "twitter", Encode.enum SpaceX.Enum.Order_by.toString |> Encode.optional input____.twitter ) ]


buildUsers_obj_rel_insert_input :
    Users_obj_rel_insert_inputRequiredFields
    -> (Users_obj_rel_insert_inputOptionalFields -> Users_obj_rel_insert_inputOptionalFields)
    -> Users_obj_rel_insert_input
buildUsers_obj_rel_insert_input required____ fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { on_conflict = Absent }
    in
    { data = required____.data, on_conflict = optionals____.on_conflict }


type alias Users_obj_rel_insert_inputRequiredFields =
    { data : Users_insert_input }


type alias Users_obj_rel_insert_inputOptionalFields =
    { on_conflict : OptionalArgument Users_on_conflict }


{-| Type for the Users\_obj\_rel\_insert\_input input object.
-}
type alias Users_obj_rel_insert_input =
    { data : Users_insert_input
    , on_conflict : OptionalArgument Users_on_conflict
    }


{-| Encode a Users\_obj\_rel\_insert\_input into a value that can be used as an argument.
-}
encodeUsers_obj_rel_insert_input : Users_obj_rel_insert_input -> Value
encodeUsers_obj_rel_insert_input input____ =
    Encode.maybeObject
        [ ( "data", encodeUsers_insert_input input____.data |> Just ), ( "on_conflict", encodeUsers_on_conflict |> Encode.optional input____.on_conflict ) ]


buildUsers_on_conflict :
    Users_on_conflictRequiredFields
    -> Users_on_conflict
buildUsers_on_conflict required____ =
    { constraint = required____.constraint, update_columns = required____.update_columns }


type alias Users_on_conflictRequiredFields =
    { constraint : SpaceX.Enum.Users_constraint.Users_constraint
    , update_columns : List SpaceX.Enum.Users_update_column.Users_update_column
    }


{-| Type for the Users\_on\_conflict input object.
-}
type alias Users_on_conflict =
    { constraint : SpaceX.Enum.Users_constraint.Users_constraint
    , update_columns : List SpaceX.Enum.Users_update_column.Users_update_column
    }


{-| Encode a Users\_on\_conflict into a value that can be used as an argument.
-}
encodeUsers_on_conflict : Users_on_conflict -> Value
encodeUsers_on_conflict input____ =
    Encode.maybeObject
        [ ( "constraint", Encode.enum SpaceX.Enum.Users_constraint.toString input____.constraint |> Just ), ( "update_columns", (Encode.enum SpaceX.Enum.Users_update_column.toString |> Encode.list) input____.update_columns |> Just ) ]


buildUsers_order_by :
    (Users_order_byOptionalFields -> Users_order_byOptionalFields)
    -> Users_order_by
buildUsers_order_by fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { id = Absent, name = Absent, rocket = Absent, timestamp = Absent, twitter = Absent }
    in
    { id = optionals____.id, name = optionals____.name, rocket = optionals____.rocket, timestamp = optionals____.timestamp, twitter = optionals____.twitter }


type alias Users_order_byOptionalFields =
    { id : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , name : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , rocket : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , timestamp : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , twitter : OptionalArgument SpaceX.Enum.Order_by.Order_by
    }


{-| Type for the Users\_order\_by input object.
-}
type alias Users_order_by =
    { id : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , name : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , rocket : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , timestamp : OptionalArgument SpaceX.Enum.Order_by.Order_by
    , twitter : OptionalArgument SpaceX.Enum.Order_by.Order_by
    }


{-| Encode a Users\_order\_by into a value that can be used as an argument.
-}
encodeUsers_order_by : Users_order_by -> Value
encodeUsers_order_by input____ =
    Encode.maybeObject
        [ ( "id", Encode.enum SpaceX.Enum.Order_by.toString |> Encode.optional input____.id ), ( "name", Encode.enum SpaceX.Enum.Order_by.toString |> Encode.optional input____.name ), ( "rocket", Encode.enum SpaceX.Enum.Order_by.toString |> Encode.optional input____.rocket ), ( "timestamp", Encode.enum SpaceX.Enum.Order_by.toString |> Encode.optional input____.timestamp ), ( "twitter", Encode.enum SpaceX.Enum.Order_by.toString |> Encode.optional input____.twitter ) ]


buildUsers_set_input :
    (Users_set_inputOptionalFields -> Users_set_inputOptionalFields)
    -> Users_set_input
buildUsers_set_input fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { id = Absent, name = Absent, rocket = Absent, timestamp = Absent, twitter = Absent }
    in
    { id = optionals____.id, name = optionals____.name, rocket = optionals____.rocket, timestamp = optionals____.timestamp, twitter = optionals____.twitter }


type alias Users_set_inputOptionalFields =
    { id : OptionalArgument SpaceX.ScalarCodecs.Uuid
    , name : OptionalArgument String
    , rocket : OptionalArgument String
    , timestamp : OptionalArgument SpaceX.ScalarCodecs.Timestamptz
    , twitter : OptionalArgument String
    }


{-| Type for the Users\_set\_input input object.
-}
type alias Users_set_input =
    { id : OptionalArgument SpaceX.ScalarCodecs.Uuid
    , name : OptionalArgument String
    , rocket : OptionalArgument String
    , timestamp : OptionalArgument SpaceX.ScalarCodecs.Timestamptz
    , twitter : OptionalArgument String
    }


{-| Encode a Users\_set\_input into a value that can be used as an argument.
-}
encodeUsers_set_input : Users_set_input -> Value
encodeUsers_set_input input____ =
    Encode.maybeObject
        [ ( "id", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecUuid) |> Encode.optional input____.id ), ( "name", Encode.string |> Encode.optional input____.name ), ( "rocket", Encode.string |> Encode.optional input____.rocket ), ( "timestamp", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecTimestamptz) |> Encode.optional input____.timestamp ), ( "twitter", Encode.string |> Encode.optional input____.twitter ) ]


buildUuid_comparison_exp :
    (Uuid_comparison_expOptionalFields -> Uuid_comparison_expOptionalFields)
    -> Uuid_comparison_exp
buildUuid_comparison_exp fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { eq_ = Absent, gt_ = Absent, gte_ = Absent, in_ = Absent, is_null_ = Absent, lt_ = Absent, lte_ = Absent, neq_ = Absent, nin_ = Absent }
    in
    { eq_ = optionals____.eq_, gt_ = optionals____.gt_, gte_ = optionals____.gte_, in_ = optionals____.in_, is_null_ = optionals____.is_null_, lt_ = optionals____.lt_, lte_ = optionals____.lte_, neq_ = optionals____.neq_, nin_ = optionals____.nin_ }


type alias Uuid_comparison_expOptionalFields =
    { eq_ : OptionalArgument SpaceX.ScalarCodecs.Uuid
    , gt_ : OptionalArgument SpaceX.ScalarCodecs.Uuid
    , gte_ : OptionalArgument SpaceX.ScalarCodecs.Uuid
    , in_ : OptionalArgument (List SpaceX.ScalarCodecs.Uuid)
    , is_null_ : OptionalArgument Bool
    , lt_ : OptionalArgument SpaceX.ScalarCodecs.Uuid
    , lte_ : OptionalArgument SpaceX.ScalarCodecs.Uuid
    , neq_ : OptionalArgument SpaceX.ScalarCodecs.Uuid
    , nin_ : OptionalArgument (List SpaceX.ScalarCodecs.Uuid)
    }


{-| Type for the Uuid\_comparison\_exp input object.
-}
type alias Uuid_comparison_exp =
    { eq_ : OptionalArgument SpaceX.ScalarCodecs.Uuid
    , gt_ : OptionalArgument SpaceX.ScalarCodecs.Uuid
    , gte_ : OptionalArgument SpaceX.ScalarCodecs.Uuid
    , in_ : OptionalArgument (List SpaceX.ScalarCodecs.Uuid)
    , is_null_ : OptionalArgument Bool
    , lt_ : OptionalArgument SpaceX.ScalarCodecs.Uuid
    , lte_ : OptionalArgument SpaceX.ScalarCodecs.Uuid
    , neq_ : OptionalArgument SpaceX.ScalarCodecs.Uuid
    , nin_ : OptionalArgument (List SpaceX.ScalarCodecs.Uuid)
    }


{-| Encode a Uuid\_comparison\_exp into a value that can be used as an argument.
-}
encodeUuid_comparison_exp : Uuid_comparison_exp -> Value
encodeUuid_comparison_exp input____ =
    Encode.maybeObject
        [ ( "_eq", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecUuid) |> Encode.optional input____.eq_ ), ( "_gt", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecUuid) |> Encode.optional input____.gt_ ), ( "_gte", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecUuid) |> Encode.optional input____.gte_ ), ( "_in", ((SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecUuid) |> Encode.list) |> Encode.optional input____.in_ ), ( "_is_null", Encode.bool |> Encode.optional input____.is_null_ ), ( "_lt", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecUuid) |> Encode.optional input____.lt_ ), ( "_lte", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecUuid) |> Encode.optional input____.lte_ ), ( "_neq", (SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecUuid) |> Encode.optional input____.neq_ ), ( "_nin", ((SpaceX.ScalarCodecs.codecs |> SpaceX.Scalar.unwrapEncoder .codecUuid) |> Encode.list) |> Encode.optional input____.nin_ ) ]
